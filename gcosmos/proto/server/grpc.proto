syntax = "proto3";

option go_package = "github.com/rollchains/gordian/gcosmos/gserver/internal/ggrpc";

package server;

service GordianGRPC {
    rpc GetBlocksWatermark(CurrentBlockRequest) returns (CurrentBlockResponse) {}
    rpc GetValidators(GetValidatorsRequest) returns (GetValidatorsResponse) {}

    // Debug routes
    rpc SubmitTransaction(SubmitTransactionRequest) returns (TxResultResponse) {}
    rpc SimulateTransaction(SubmitSimulationTransactionRequest) returns (TxResultResponse) {}
    rpc PendingTransaction(PendingTransactionRequest) returns (PendingTransactionResponse) {}
    rpc QueryAccountBalance(QueryAccountBalanceRequest) returns (QueryAccountBalanceResponse) {}
}

message CurrentBlockRequest {}

message CurrentBlockResponse {
    uint64 voting_height = 1;
    uint32 voting_round = 2;

    uint64 committing_height = 3;
    uint32 committing_round = 4;
}

message GetValidatorsRequest {}

message Validator {
    bytes pub_key = 1;
    uint64 power = 2;
}

message GetValidatorsResponse {
    repeated Validator validators = 1;
}

message SubmitTransactionRequest {
    bytes tx = 1;
}

message SubmitSimulationTransactionRequest {
    bytes tx = 1;
}

message PendingTransactionRequest {}

message PendingTransactionResponse {
    // json encoded
    repeated string txs = 1;
}



// cosmos-sdk/core/app/app.go#TxResult
// TODO: import this directly from the SDK? or use our own?

// what if we just return the entire bytes from consensus?
// then we dont have to deal with any SDK encoding.
message TxResultResponse {
    // TODO: tx hash?
    // repeated string events = 1;
    // bytes resp = 2;
    // string error = 3;
    // uint32 code = 4;
    // bytes data = 5;
    // string log = 6;
    // string info = 7;
    // uint64 gas_wanted = 8;
    // uint64 gas_used = 9;
    // string codespace = 10;

    string tx_result = 1; // json
}

message QueryAccountBalanceRequest {
    string account_id = 1;
    string denom = 2;
}

// {"balance":{"denom":"stake","amount":"0"}}
message QueryAccountBalanceResponse {
    BalanceResponse balance = 1;
}

message BalanceResponse {
    string denom = 1;
    string amount = 2;
}